/* screen size break points : 375px , 1440px */
@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap");

:root {
  --primary-color: hsl(220, 98%, 61%);
  --primary-gradient: linear-gradient(
    150deg,
    hsl(192, 100%, 67%),
    hsl(280, 87%, 65%)
  );

  --light-color1: hsl(0, 0%, 98%);
  --light-color2: hsl(236, 33%, 92%);
  --light-color3: hsl(233, 11%, 84%);
  --light-color4: hsl(236, 9%, 61%);
  --light-color5: hsl(235, 19%, 35%);

  --dark-color1: hsl(235, 21%, 11%);
  --dark-color2: hsl(235, 24%, 19%);
  --dark-color3: hsl(234, 39%, 85%);
  --dark-color4: hsl(236, 33%, 92%);
  --dark-color5: hsl(234, 11%, 52%);
  --dark-color6: hsl(233, 14%, 35%);
  --dark-color7: hsl(237, 14%, 26%);

  --font-family: "Josefin Sans", sans-serif;
  --font-thin: 400;
  --font-thick: 700;
}

body {
  font-family: var(--font-family);
}

body.dark {
  background-color: var(--dark-color1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* ------- main components-------- */
.theme {
  cursor: pointer;
}
.hero {
  position: absolute;
  z-index: -1;
  top: 0;
  background-image: url(../images/bg-desktop-light.jpg);
  background-position: center;
  background-size: cover;
  width: 100%;
  height: 40vh;
  min-height: 350px;
  max-height: 600px;
}

.dark .hero {
  background-image: url(../images/bg-desktop-dark.jpg);
}

@media (max-width: 767px) {
  .hero {
    background-image: url(../images/bg-mobile-light.jpg);
    height: 30vh;
  }

  .dark .hero {
    background-image: url(../images/bg-mobile-dark.jpg);
  }
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  min-width: 700px;
  width: 35vw;
  max-width: 800px;
  margin: 5vh auto 0;
}

@media (max-width: 767px) {
  .container {
    min-width: 200px;
    max-width: unset;
    width: 85vw;
    margin-top: 0;
  }
}

.head,
.create,
.page,
.list,
.tail {
  width: 100%;
}

.head {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 50px;
}

@media (max-width: 767px) {
  .head {
    margin-block: 40px;
  }
}

.create {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
  height: 80px;
  border-radius: 8px;
  background-color: var(--light-color1);
}

@media (max-width: 767px) {
  .create {
    margin-bottom: 30px;
    height: 60px;
  }
}

.dark .create {
  background-color: var(--dark-color2);
}

.create__input,
.list li p {
  width: calc(100% - 85px);
  height: 100%;
  font-size: 2rem;
  border-radius: 8px;
  outline: unset;
  border: unset;
  background-color: unset;
}

@media (max-width: 767px) {
  .create__input,
  .list li p {
    font-size: 1.5rem;
  }
}

@media (max-width: 400px) {
  .create__input,
  .list li p {
    font-size: 1.1rem;
  }
}

.page {
  position: relative;
  border-radius: 8px;
  background-color: var(--light-color1);
  box-shadow: 0 0 15px 5px rgb(0, 0, 0, 0.1);
}

.dark .page {
  background-color: var(--dark-color2);
}

.list {
  list-style: none;
  max-height: 480px;
  overflow-y: scroll;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.list li {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 80px;
  color: var(--light-color5);
  border-bottom: 1px solid var(--light-color2);
}

@media (max-width: 767px) {
  .list li {
    height: 60px;
  }
}

.dark .list li {
  color: var(--dark-color4);
}

.dark .list li {
  border-bottom: 1px solid var(--dark-color7);
}

.list li p {
  display: flex;
  align-items: center;
}

.tail {
  display: flex;
  justify-content: space-between;
  padding: 25px;
  color: var(--light-color4);
}

.dark .tail {
  color: var(--dark-color5);
}

@media (max-width: 767px) {
  .tail {
    padding: 20px;
  }
}

@media (max-width: 600px) {
  .tail {
    justify-content: space-around;
  }
}

@media (max-width: 280px) {
  .tail {
    justify-content: center;
  }
  .tail p {
    position: absolute;
    visibility: hidden;
  }
}

.control {
  position: absolute;
  bottom: 0px;
  left: 50%;
  transform: translateX(-55%);
  display: flex;
  justify-content: space-between;
  padding: 20px;
  gap: 30px;
  text-transform: capitalize;
  color: var(--light-color4);
}

.dark .control {
  color: var(--dark-color5);
}

@media (max-width: 600px) {
  .control {
    justify-content: space-around;
    transform: translate(-50%, 150%);
    border-radius: 8px;
    width: 100%;
    padding-block: 20px;
    box-shadow: 0 0 15px 5px rgb(0, 0, 0, 0.1);
    background-color: var(--light-color1);
  }

  .dark .control {
    background-color: var(--dark-color2);
  }
}

@media (max-width: 400px) {
  .control,
  .tail {
    font-size: 0.8rem;
  }
}

a {
  cursor: pointer;
}

a.current {
  color: var(--primary-color);
}

a:not(.current):hover {
  color: var(--light-color5);
}

.dark a:not(.current):hover {
  color: var(--dark-color3);
}

p.drag-drop {
  position: absolute;
  bottom: 100px;
  left: 50%;
  transform: translateX(-50%);
}

/*  */

h1 {
  text-transform: uppercase;
  letter-spacing: 8px;
  font-size: 2.5rem;
  color: var(--light-color1);
}

@media (max-width: 767px) {
  h1 {
    font-size: 2rem;
  }
}

input {
  caret-color: var(--primary-color);
  color: var(--light-color5);
}

.dark input {
  color: var(--dark-color4);
}

input::placeholder {
  color: var(--light-color3);
}

.dark input::placeholder {
  color: var(--dark-color7);
}

input[type="checkbox"] {
  position: relative;
  appearance: none;
  -webkit-appearance: none;
  width: 30px;
  height: 30px;
  background-color: unset;
  border: 1px solid var(--light-color2);
  border-radius: 50%;
  cursor: pointer;
  outline: none;
  margin-left: 25px;
}

.dark input[type="checkbox"] {
  border: 1px solid var(--dark-color6);
}

input[type="checkbox"]:checked {
  position: relative;
  background-image: var(--primary-gradient);
}

input[type="checkbox"]:checked::after {
  position: absolute;
  content: "";
  background-image: url(../images/icon-check.svg);
  background-position: center;
  background-repeat: no-repeat;
  background-size: 60%;
  width: 100%;
  height: 100%;
}

input[type="checkbox"]:checked + p {
  text-decoration: line-through;
  color: var(--light-color3);
}

.dark input[type="checkbox"]:checked + p {
  color: var(--dark-color7);
}

.task:not(.completed):hover input[type="checkbox"]::after {
  content: "";
  position: absolute;
  left: -10%;
  top: -10%;
  width: 120%;
  height: 120%;
  border-radius: 50%;
  background-image: var(--primary-gradient);
}

.task:not(.completed):hover input[type="checkbox"]::before {
  content: "";
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: var(--light-color1);
}

.dark .task:not(.completed):hover input[type="checkbox"]::before {
  background-color: var(--dark-color2);
}

.remove {
  display: none;
  position: absolute;
  cursor: pointer;
  right: 30px;
}

.task:hover .remove {
  display: block;
}
